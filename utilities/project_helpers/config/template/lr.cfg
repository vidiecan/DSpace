# UFAL mounted assetstore for restricted item harvesting
# please mind the trailing slash
lr.harvestable.assetstore = ${lr.harvestable.assetstore}


# Google analytics credentials and key file
lr.ga.analytics.key.file = ${lr.ga.analytics.key.file} 
lr.ga.analytics.profile.id = ${lr.ga.analytics.profile.id}
lr.ga.analytics.account.email = ${lr.ga.analytics.account.email}


# This file will be used to display the changes in different releases.
# It is available in Control Panel for admins.
lr.releasenotes = ${lr.dspace.dir}/config/ufal.releasenotes.txt


# Source directory that is used to compile the currrent instance of dspace.
lr.dspace.source.dir = ${lr.dspace.source.dir}


# UFAL Utilities Settings
lr.utilities.functionalityManager.class = ${lr.utilities.functionalityManager.class}


# Space delimited list of parts of url which should not generate page not found
lr.ignore.notFound = shibboleth-login logout

# Email where errors will be sent (from specific classes)
lr.errors.email = ${lr.errors.email}
lr.errors.ignore = ClientAbortException:  java.net.SocketException: Broken pipe

# whether to show privacy info for each user
lr.login.welcome.message = true
lr.login.welcome.message.ignore = remote_user,accept,cache-control,\
    accept-encoding,connection,accept-language,host,cookie,referer,user-agent,shib-cookie-name

# CC emails with download links, leave empty to disable
# = lindat-technical@ufal.mff.cuni.cz
lr.download.email.cc = ${lr.info.recipient}


###### PIDService Settings ######
lr.pid.service.type = ${lr.pid.service.type}
lr.pid.service.url = ${lr.pid.service.url}      
lr.pid.service.user = ${lr.pid.service.user}        
lr.pid.service.pass = ${lr.pid.service.pass}
lr.pid.service.testPid = ${lr.pid.service.testPid}

# per community pid configurations for pid prefixes of the format:
# community=<community ID>,prefix=<prefix>,alternative_prefixes=<pipeline separated list of alternative prefixes>,type=<local|epic>,canonical_prefix=<URL of handle>
# multiple configurations can be given separated by semicolon
# default configuration should have asterisk as the community ID
lr.pid.community.configurations = ${lr.pid.community.configurations}

###### EUDAT replication ######
# switched off by default
lr.replication.eudat.on=${lr.replication.eudat.on}
lr.replication.eudat.host=${lr.replication.eudat.host}
lr.replication.eudat.port=${lr.replication.eudat.port}
lr.replication.eudat.username=${lr.replication.eudat.username}
lr.replication.eudat.password=${lr.replication.eudat.password}
lr.replication.eudat.homedirectory=${lr.replication.eudat.homedirectory}
lr.replication.eudat.replicadirectory=${lr.replication.eudat.replicadirectory}
lr.replication.eudat.zone=${lr.replication.eudat.zone}
lr.replication.eudat.defaultstorage=${lr.replication.eudat.defaultstorage}
lr.replication.eudat.notification_email=${lr.replication.eudat.notification_email}
# default is not set
lr.replication.jargon.numThreads=${lr.replication.jargon.numThreads}
# default 32 * 1024 * 1024
lr.replication.jargon.MAX_SZ_FOR_SINGLE_BUF=${lr.replication.jargon.MAX_SZ_FOR_SINGLE_BUF}
# default 65535
lr.replication.jargon.BUFFER_SIZE=${lr.replication.jargon.BUFFER_SIZE}
# log progress after count of iterations (depends on buffer_size)
lr.replication.jargon.PUT_LOG_AFTER=${lr.replication.jargon.PUT_LOG_AFTER}

###### autocomplete ######
lr.autocomplete.on=${lr.autocomplete.on}
lr.autocomplete.solr.url=${lr.autocomplete.solr.url}
lr.autocomplete.json_static.url=${lr.autocomplete.json_static.url}

###### File download options ######
lr.download.all.limit.min.file.count = ${lr.download.all.limit.min.file.count}
lr.download.all.limit.max.file.size = ${lr.download.all.limit.max.file.size}
lr.download.all.alert.min.file.size = ${lr.download.all.alert.min.file.size}

###### File upload options ######
lr.upload.file.alert.max.file.size = ${lr.upload.file.alert.max.file.size}

###### Control panel default user for cron dispaly ######
lr.cron.user=dspace


lr.curation.handle.correction = true

# Configurations added for UFAL extensions (by Petr Pajas)
# Options for the class cz.cuni.mff.ufal.dspace.PIDService

# max items to process in CP Metadata QA functionality
lr.metaqa.max.processed = 10000 

#List of collection ids where check required metadata should include extrametadata. Separate with commas(,)
lr.extrametadata.required.check.col.ids=2

##### METADATA EDIT #####
#### name || id
### these collections allow submitters to edit metadata of their items
#lr.allow.edit.metadata = 1

############################################
#
# User profile options
# 
# whether to show language field in user profile
lr.xmlui.user.showlanguage = ${lr.xmlui.user.showlanguage}

#Shibboleth installation paths
lr.shibboleth.log.path = ${lr.shibboleth.log.path}
lr.shibboleth.log.defaultName = ${lr.shibboleth.log.defaultName}
lr.shibboleth.discofeed.url = ${lr.shibboleth.discofeed.url}

lr.aai.url = ${lr.aai.url}

# The base URL of the OAI webapp (do not include /request).
lr.dspace.oai.url = ${lr.dspace.baseUrl}/oai

# page with info about harvesting the repository
lr.harvester.info.url = ${harvesterInfo.url}
lr.harvester.info.anchorName = ${harvesterInfo.anchorName}

lr.default.eperson.language = en


# do not show local*
lr.metadata.hide.local.*.* = true
# !! do not hide metashare fields see #849

# UFAL - limit number of showed submissions
lr.webui.submit.submitted.limit=10


# UFAL Utiliteis database configuration
lr.utilities.db.url = ${lr.utilities.db.url}
lr.utilities.db.username = ${lr.db.username}
lr.utilities.db.password = ${lr.db.password}


#== DSpace Api's ==
lr.post.error = true
lr.item.viewer = true
lr.license.agreement = true

#== Functionalities ==
lr.mail.acceptation = true
lr.scope.recognition = true

#mailAcceptation
lr.shibboleth.name.acceptation.allowedEmailTemplate = ^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}(;.*)*$
lr.shibboleth.name.acceptation.allowedEmailTemplateSeparator = ;

#nameConversion
lr.shibboleth.name.conversion.inputEncoding = ISO-8859-1
lr.shibboleth.name.conversion.outputEncoding = UTF-8

############################################
#
# Tracker configuration
#
# Enable or disable tracker
#lr.tracker.enabled = true
#
# Type of the tracker. Currently only the Piwik tracker is supported
#lr.tracker.type = piwik
#
# Tracker API URL to which tracking information is being sent
#lr.tracker.api.url = https://host/piwik/piwik.php
#
# Site ID under which OAI requests are filed
#lr.tracker.oai.site_id = 5
#
# Site ID under which Bitstream downloads are filed
#lr.tracker.bitstream.site_id = 5
#
############################################
lr.tracker.enabled = ${lr.tracker.enabled}
lr.tracker.type = ${lr.tracker.type}
lr.tracker.api.url = ${lr.tracker.api.url}
lr.tracker.api.auth.token = ${lr.tracker.api.auth.token}
lr.tracker.oai.site_id = ${lr.tracker.oai.site_id}
lr.tracker.bitstream.site_id = ${lr.tracker.bitstream.site_id}


############################################
#
# Curation
#
############################################

# Space separated metadata patterns (regular expression)
# that should be ignored while checking for required metadata
# Leave it empty if you want to check everything.
lr.curation.metadata.checkrequired.ignore = ${lr.curation.metadata.checkrequired.ignore}

############################################
#
# Link checker
#
# User Agent string for link checker
#lr.link.checker.user.agent = "DSpace Link Validator"
#
# Connection timeout for link checker (in milliseconds)
#lr.link.checker.connect.timeout = 2000
#
# Read timeout for link checker (in milliseconds)
#lr.link.checker.read.timeout = 3000
#
############################################
lr.link.checker.user.agent = ${lr.link.checker.user.agent}
lr.link.checker.connect.timeout = ${lr.link.checker.connect.timeout}
lr.link.checker.read.timeout = ${lr.link.checker.read.timeout}
